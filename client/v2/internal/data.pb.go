// Code generated by protoc-gen-go.
// source: data.proto
// DO NOT EDIT!

/*
Package internal is a generated protocol buffer package.

It is generated from these files:
	data.proto

It has these top-level messages:
	Results
	InfluxResponse
	InfoMessage
	Row
	Values
	Value
*/
package internal

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Results struct {
	Result           []*InfluxResponse `protobuf:"bytes,1,rep,name=Result" json:"Result,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Results) Reset()                    { *m = Results{} }
func (m *Results) String() string            { return proto.CompactTextString(m) }
func (*Results) ProtoMessage()               {}
func (*Results) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Results) GetResult() []*InfluxResponse {
	if m != nil {
		return m.Result
	}
	return nil
}

type InfluxResponse struct {
	Statementid      *int32         `protobuf:"varint,5,opt,name=statementid" json:"statementid,omitempty"`
	Series           []*Row         `protobuf:"bytes,1,rep,name=series" json:"series,omitempty"`
	Message          []*InfoMessage `protobuf:"bytes,2,rep,name=Message" json:"Message,omitempty"`
	Partial          *bool          `protobuf:"varint,3,opt,name=Partial" json:"Partial,omitempty"`
	Err              *string        `protobuf:"bytes,4,opt,name=Err" json:"Err,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *InfluxResponse) Reset()                    { *m = InfluxResponse{} }
func (m *InfluxResponse) String() string            { return proto.CompactTextString(m) }
func (*InfluxResponse) ProtoMessage()               {}
func (*InfluxResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InfluxResponse) GetStatementid() int32 {
	if m != nil && m.Statementid != nil {
		return *m.Statementid
	}
	return 0
}

func (m *InfluxResponse) GetSeries() []*Row {
	if m != nil {
		return m.Series
	}
	return nil
}

func (m *InfluxResponse) GetMessage() []*InfoMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *InfluxResponse) GetPartial() bool {
	if m != nil && m.Partial != nil {
		return *m.Partial
	}
	return false
}

func (m *InfluxResponse) GetErr() string {
	if m != nil && m.Err != nil {
		return *m.Err
	}
	return ""
}

type InfoMessage struct {
	Level            *string `protobuf:"bytes,1,opt,name=Level" json:"Level,omitempty"`
	Text             *string `protobuf:"bytes,2,opt,name=Text" json:"Text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *InfoMessage) Reset()                    { *m = InfoMessage{} }
func (m *InfoMessage) String() string            { return proto.CompactTextString(m) }
func (*InfoMessage) ProtoMessage()               {}
func (*InfoMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *InfoMessage) GetLevel() string {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return ""
}

func (m *InfoMessage) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type Row struct {
	Name             *string           `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Tags             map[string]string `protobuf:"bytes,2,rep,name=Tags" json:"Tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Columns          []string          `protobuf:"bytes,3,rep,name=Columns" json:"Columns,omitempty"`
	Values           []*Values         `protobuf:"bytes,4,rep,name=Values" json:"Values,omitempty"`
	Partial          *bool             `protobuf:"varint,5,opt,name=Partial" json:"Partial,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Row) Reset()                    { *m = Row{} }
func (m *Row) String() string            { return proto.CompactTextString(m) }
func (*Row) ProtoMessage()               {}
func (*Row) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Row) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Row) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Row) GetColumns() []string {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *Row) GetValues() []*Values {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *Row) GetPartial() bool {
	if m != nil && m.Partial != nil {
		return *m.Partial
	}
	return false
}

type Values struct {
	Value            []*Value `protobuf:"bytes,1,rep,name=Value" json:"Value,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Values) Reset()                    { *m = Values{} }
func (m *Values) String() string            { return proto.CompactTextString(m) }
func (*Values) ProtoMessage()               {}
func (*Values) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Values) GetValue() []*Value {
	if m != nil {
		return m.Value
	}
	return nil
}

type Value struct {
	DataType         *int32   `protobuf:"varint,1,req,name=DataType" json:"DataType,omitempty"`
	FloatValue       *float64 `protobuf:"fixed64,2,opt,name=FloatValue" json:"FloatValue,omitempty"`
	IntegerValue     *int64   `protobuf:"varint,3,opt,name=IntegerValue" json:"IntegerValue,omitempty"`
	StringValue      *string  `protobuf:"bytes,4,opt,name=StringValue" json:"StringValue,omitempty"`
	BoolValue        *bool    `protobuf:"varint,5,opt,name=BoolValue" json:"BoolValue,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Value) Reset()                    { *m = Value{} }
func (m *Value) String() string            { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()               {}
func (*Value) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Value) GetDataType() int32 {
	if m != nil && m.DataType != nil {
		return *m.DataType
	}
	return 0
}

func (m *Value) GetFloatValue() float64 {
	if m != nil && m.FloatValue != nil {
		return *m.FloatValue
	}
	return 0
}

func (m *Value) GetIntegerValue() int64 {
	if m != nil && m.IntegerValue != nil {
		return *m.IntegerValue
	}
	return 0
}

func (m *Value) GetStringValue() string {
	if m != nil && m.StringValue != nil {
		return *m.StringValue
	}
	return ""
}

func (m *Value) GetBoolValue() bool {
	if m != nil && m.BoolValue != nil {
		return *m.BoolValue
	}
	return false
}

func init() {
	proto.RegisterType((*Results)(nil), "internal.Results")
	proto.RegisterType((*InfluxResponse)(nil), "internal.InfluxResponse")
	proto.RegisterType((*InfoMessage)(nil), "internal.InfoMessage")
	proto.RegisterType((*Row)(nil), "internal.Row")
	proto.RegisterType((*Values)(nil), "internal.Values")
	proto.RegisterType((*Value)(nil), "internal.Value")
}

func init() { proto.RegisterFile("data.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x52, 0xdb, 0x6a, 0x14, 0x41,
	0x10, 0xa5, 0x77, 0x76, 0xf6, 0x52, 0xeb, 0x25, 0x14, 0x8a, 0x4d, 0x10, 0x19, 0x06, 0x02, 0x03,
	0xc2, 0x46, 0x7c, 0x89, 0xe8, 0x9b, 0x1a, 0x21, 0xa0, 0x22, 0xe5, 0x92, 0xf7, 0x86, 0x94, 0xcb,
	0xe0, 0x6c, 0xf7, 0xd2, 0xdd, 0x9b, 0x64, 0xbf, 0xc8, 0x3f, 0xf0, 0x6f, 0xfc, 0x17, 0xe9, 0xe9,
	0x9e, 0xdd, 0x99, 0xbc, 0x9d, 0x3a, 0xe7, 0x50, 0x55, 0xa7, 0xab, 0x01, 0x6e, 0x94, 0x57, 0xcb,
	0xad, 0x35, 0xde, 0xe0, 0xac, 0xd6, 0x9e, 0xad, 0x56, 0x4d, 0xf9, 0x01, 0xa6, 0xc4, 0x6e, 0xd7,
	0x78, 0x87, 0x6f, 0x60, 0x12, 0xa1, 0x14, 0x45, 0x56, 0x2d, 0xde, 0xca, 0x65, 0xe7, 0x5a, 0x5e,
	0xe9, 0x5f, 0xcd, 0xee, 0x9e, 0xd8, 0x6d, 0x8d, 0x76, 0x4c, 0xc9, 0x57, 0xfe, 0x15, 0xf0, 0x64,
	0x28, 0x61, 0x01, 0x0b, 0xe7, 0x95, 0xe7, 0x0d, 0x6b, 0x5f, 0xdf, 0xc8, 0xbc, 0x10, 0x55, 0x4e,
	0x7d, 0x0a, 0xcf, 0x60, 0xe2, 0xd8, 0xd6, 0xec, 0xd2, 0x98, 0xc7, 0xc7, 0x31, 0x64, 0xee, 0x28,
	0x89, 0x78, 0x0e, 0xd3, 0x6f, 0xec, 0x9c, 0x5a, 0xb3, 0x1c, 0xb5, 0xbe, 0xe7, 0x83, 0x75, 0x4c,
	0x12, 0xa9, 0x73, 0xa1, 0x84, 0xe9, 0x0f, 0x65, 0x7d, 0xad, 0x1a, 0x99, 0x15, 0xa2, 0x9a, 0x51,
	0x57, 0xe2, 0x09, 0x64, 0x97, 0xd6, 0xca, 0x71, 0x21, 0xaa, 0x39, 0x05, 0x58, 0x5e, 0xc0, 0xa2,
	0xd7, 0x03, 0x9f, 0x41, 0xfe, 0x95, 0x6f, 0xb9, 0x91, 0xa2, 0xb5, 0xc4, 0x02, 0x11, 0xc6, 0x2b,
	0xbe, 0xf7, 0x72, 0xd4, 0x92, 0x2d, 0x2e, 0xff, 0x09, 0xc8, 0xc8, 0xdc, 0x05, 0xed, 0xbb, 0xda,
	0xb0, 0x14, 0xc5, 0x28, 0x68, 0x01, 0xe3, 0x6b, 0x18, 0xaf, 0xd4, 0xda, 0xa5, 0x75, 0x5f, 0x0c,
	0x62, 0x2d, 0x83, 0x72, 0xa9, 0xbd, 0xdd, 0x53, 0x6b, 0x0a, 0xdb, 0x7e, 0x32, 0xcd, 0x6e, 0xa3,
	0x9d, 0xcc, 0x8a, 0xac, 0x9a, 0x53, 0x57, 0x62, 0x05, 0x93, 0x6b, 0xd5, 0xec, 0xd8, 0xc9, 0x71,
	0xdb, 0xe8, 0xe4, 0xd8, 0x28, 0xf2, 0x94, 0xf4, 0x7e, 0xe2, 0x7c, 0x90, 0xf8, 0xf4, 0x02, 0xe6,
	0x87, 0x81, 0x21, 0xfe, 0x6f, 0xde, 0xa7, 0x6c, 0x01, 0x86, 0xbc, 0xb7, 0xa1, 0x45, 0x8a, 0x16,
	0x8b, 0xf7, 0xa3, 0x77, 0xa2, 0x3c, 0xef, 0x86, 0xe3, 0x19, 0xe4, 0x2d, 0x4a, 0x57, 0x7a, 0xfa,
	0x60, 0x0b, 0x8a, 0x6a, 0xf9, 0x47, 0x24, 0x1f, 0x9e, 0xc2, 0xec, 0xb3, 0xf2, 0x6a, 0xb5, 0xdf,
	0xc6, 0x67, 0xc9, 0xe9, 0x50, 0xe3, 0x2b, 0x80, 0x2f, 0x8d, 0x51, 0xfe, 0xfa, 0x30, 0x55, 0x50,
	0x8f, 0xc1, 0x12, 0x1e, 0x5d, 0x69, 0xcf, 0x6b, 0xb6, 0xd1, 0x11, 0x0e, 0x98, 0xd1, 0x80, 0x0b,
	0x3f, 0xeb, 0xa7, 0xb7, 0xb5, 0x5e, 0x47, 0x4b, 0xbc, 0x66, 0x9f, 0xc2, 0x97, 0x30, 0xff, 0x68,
	0x4c, 0x13, 0xf5, 0xf8, 0x22, 0x47, 0xe2, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x28, 0x88,
	0x06, 0x00, 0x03, 0x00, 0x00,
}
